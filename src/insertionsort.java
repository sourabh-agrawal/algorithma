
import java.awt.Color;
import java.awt.Graphics;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Rubal_cooL
 */
public class insertionsort extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form insertionsort
     */
    Thread t=new Thread(this);
    
   int[] arr1 = {0,0,0,0,0,0}; 
   int[] arr2={0,0,0,0,0,0};
   int[] arr3={0,0,0,0,0,0};
int m=-1;
int x=0;
int del=0;

int select=0;

    public insertionsort() {
        initComponents();
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        A = new javax.swing.JTextField();
        B = new javax.swing.JTextField();
        C = new javax.swing.JTextField();
        D = new javax.swing.JTextField();
        E = new javax.swing.JTextField();
        F = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        A.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        A.setText("400");
        A.setToolTipText("");
        A.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                AFocusLost(evt);
            }
        });

        B.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        B.setText("300");
        B.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BFocusLost(evt);
            }
        });
        B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActionPerformed(evt);
            }
        });

        C.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        C.setText("250");
        C.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CFocusLost(evt);
            }
        });
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });

        D.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        D.setText("200");
        D.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DFocusLost(evt);
            }
        });

        E.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        E.setText("100");
        E.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                EFocusLost(evt);
            }
        });

        F.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        F.setText("20");
        F.setToolTipText("");
        F.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                FFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                FFocusLost(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 0, 51));
        jButton1.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SORT");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(694, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(F)
                    .addComponent(E)
                    .addComponent(D)
                    .addComponent(C)
                    .addComponent(A)
                    .addComponent(B)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(E, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(F, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AFocusLost
        arr1[0]=Integer.parseInt(A.getText());    
        m=1;
        repaint();
    }//GEN-LAST:event_AFocusLost

    private void BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BActionPerformed

    private void BFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BFocusLost
arr1[1]=Integer.parseInt(B.getText());        // TODO add your handling code here:
  m=1;
        repaint();
    }//GEN-LAST:event_BFocusLost

    private void CFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CFocusLost
arr1[2]=Integer.parseInt(C.getText());        // TODO add your handling code here:
  m=1;
        repaint();
    }//GEN-LAST:event_CFocusLost

    private void DFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DFocusLost
arr1[3]=Integer.parseInt(D.getText());        // TODO add your handling code here:
  m=1;
        repaint();
    }//GEN-LAST:event_DFocusLost

    private void EFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EFocusLost
arr1[4]=Integer.parseInt(E.getText());        // TODO add your handling code here:
  m=1;
        repaint();
    }//GEN-LAST:event_EFocusLost

    private void FFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FFocusLost
arr1[5]=Integer.parseInt(F.getText());        // TODO add your handling code here:
  m=1;
        repaint();
    }//GEN-LAST:event_FFocusLost

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed

m=2;
repaint();
for (int i=0;i<=5;++i)
    arr2[i]=arr1[i];
t.start();


    }//GEN-LAST:event_jButton1MousePressed

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CActionPerformed

    private void AFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AFocusGained
               A.setBackground(new java.awt.Color(0, 255, 204));
    }//GEN-LAST:event_AFocusGained

    private void BFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BFocusGained
               B.setBackground(new java.awt.Color(0, 255, 204));
    }//GEN-LAST:event_BFocusGained

    private void CFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CFocusGained
               C.setBackground(new java.awt.Color(0, 255, 204));
    }//GEN-LAST:event_CFocusGained

    private void DFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DFocusGained
               D.setBackground(new java.awt.Color(0, 255, 204));
    }//GEN-LAST:event_DFocusGained

    private void EFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EFocusGained
               E.setBackground(new java.awt.Color(0, 255, 204));
    }//GEN-LAST:event_EFocusGained

    private void FFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FFocusGained
               F.setBackground(new java.awt.Color(0, 255, 204));
    }//GEN-LAST:event_FFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(insertionsort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(insertionsort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(insertionsort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(insertionsort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new insertionsort().setVisible(true);
            }
        });
    }

    
   public  void run(){
         insertionSort(arr1);}
     
      void insertionSort(int array[]) {  
        int n = array.length;  
        for (int j = 1; j < n; j++) {  
            int key = array[j];  
            int i = j-1;  
            while ( (i > -1) && ( array [i] > key ) ) {  
                array [i+1] = array [i];  
                for(int k=0;k<=5;++k)
                { if(k==i)
                { arr3[k]=key;
                select=k;
                }
                
                else
                    arr3[k]=array[k];}
                del=1;
                m=2;
                
                repaint();
            try {
                t.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(insertionsort.class.getName()).log(Level.SEVERE, null, ex);
            }
                i--;  
            }  
            array[i+1] = key; 
            
            
        } 
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField A;
    private javax.swing.JTextField B;
    private javax.swing.JTextField C;
    private javax.swing.JTextField D;
    private javax.swing.JTextField E;
    private javax.swing.JTextField F;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
public void clear()
{

}
public void paint(Graphics g)
{
if(m==1)
{
    x=70;
    
    g.setColor(Color.black);
    
        
    for(int i=0;i<=5;i++)
    {   System.out.print("|"+arr1[i]);
        
        g.fillRect(x, 70, 60, arr1[i]);
        x=x+70;
        
    }
    m=0;
}
    if(del==1)
    {
        x=70;
    g.setColor(Color.white); 
    for(int i=0;i<=5;i++)
    {  
        
        g.fillRect(x, 70, 60, arr2[i]+1000);
        x=x+70;
        
    }
    del=0;
    
    }
    if(m==2)
    {
    x=70;
    g.setColor(Color.black); 
    for(int i=0;i<=5;i++)
    {  
        if(i==select)
        {
            g.setColor(Color.orange);
            g.fillRect(x, 70, 60, arr3[i]);
        x=x+70;
        }
        else
        {
            g.setColor(Color.black);
        g.fillRect(x, 70, 60, arr3[i]);
        x=x+70;
        }
    }
    for(int i=0;i<=5;i++)
    {  
        
        arr2[i]=arr3[i];
    }
    m=0;
}
}
}


